@page "/"
@using AndroidMujezin.Modeli;
@using AndroidMujezin.Servisi;
@using Microsoft.Maui;
@using Microsoft.AspNetCore.Components.WebView.Maui;
@using System.Reflection;
@inject Servisi.VakatServis _vakatServis;
@inject Servisi.ConfigServis _configServis;
@inject IJSRuntime JsInterop;
<h3>Postavke za ezane</h3>
<div class="container-fluid">
<ul>
    <li><AnchorLink href="#Zora">Zora</AnchorLink></li>
    <li><AnchorLink href="#IzlazakSunca">Izlazak sunca</AnchorLink></li>
    <li><AnchorLink href="#Podne">Podne </AnchorLink></li>
    <li><AnchorLink href="#Dzuma">Džuma</AnchorLink></li>
    <li><AnchorLink href="#Ikindija">Ikindija</AnchorLink></li>
    <li><AnchorLink href="#Aksam">Akšam</AnchorLink></li>
    <li><AnchorLink href="#Jacija">Jacija</AnchorLink></li>
</ul>
<hr />
 
        
    @foreach (var namaz in namazi)
    {
        <div id="@namaz.Namaz">
            <br/>
    <div class="row">
    <h3 >Postavke za @_vakatServis.NazivNamazaNominativ(namaz.Namaz)</h3>
        <div class="col-6">
        <div class="form-check">
            <label class="form-check-label">
                <span class="lead">Ezani</span>
            </label>
                        <input class="form-check-input" @oninput="(e)=>{ this.OnModelChanged(e, namaz.Namaz , nameof(namaz.Ezani));}" type="checkbox" @bind="namaz.Ezani">
            
        </div>
    </div>
        <div class="col-6">
    <div class="input-group">
      <div class="input-group-text">Korekcija minuta: </div>
                        <input type="number" class="form-control" @onchange="(e)=>{ this.OnModelChanged(e, namaz.Namaz, nameof(namaz.KorekcijaMinta));} " value="@namaz.KorekcijaMinta"  min="0" max="100" placeholder="Korekcija minuta">
    </div>
  </div>
</div>
    <div class="row">

        <div class="col-6">
        <div class="form-check">
            <label class="form-check-label">
                <span class="lead">Obavjesti me</span>
            </label>
                        <input class="form-check-input" @oninput="(e)=>{ this.OnModelChanged(e, namaz.Namaz,nameof(namaz.Notifikuj));} " type="checkbox" @bind="namaz.Notifikuj">
        </div>
    </div>
        <div class="col-6">
        <div class="input-group">
                <div class="input-group-text">Korekcija minuta: </div>
                        <input type="number" class="form-control" @oninput="(e)=>{ this.OnModelChanged(e, namaz.Namaz,nameof(namaz.NotifikujMinutaPrije));} " @bind="namaz.NotifikujMinutaPrije" min="0" max="100" placeholder="Korekcija minuta">
        </div>
    </div>
    
    </div>
<div class="row ">
        <div class="col-12">
    <div class="input-group">
        <label class="input-group-text"  >Audio fajla:</label>
                        <select class="form-select" @oninput="(e)=>{ this.OnModelChanged(e, namaz.Namaz,nameof(namaz.FajlaZaEzan));}" @bind="namaz.FajlaZaEzan" aria-label="Default select example">
            <option selected>Open this select menu</option>
            <option value="1">One</option>
            <option value="2">Two</option>
            <option value="3">Three</option>
        </select>
    </div>
    </div>
</div>
<div class="row">
                <label class="form-label">Jačina zvuka ezana (volume: @namaz.Volume %)</label>
                <input type="range" @oninput="(e)=>{ this.OnModelChanged(e, namaz.Namaz,nameof(namaz.Volume));} " class="form-range" @bind="namaz.Volume">
    </div>
    </div>
    <hr />
    }

        <button type="submit" class="btn btn-primary">Spasi</button>
    <hr />
    
</div>


@code {


    private NamazModel zora = new NamazModel() { Namaz = NamazEnum.Zora };
    public NamazModel izlazak { get; set; } = new NamazModel() { Namaz = NamazEnum.IzlazakSunca };
    public NamazModel podne { get; set; } = new NamazModel() { Namaz = NamazEnum.Podne };
    public NamazModel dzuma { get; set; } = new NamazModel() { Namaz = NamazEnum.Dzuma };
    public NamazModel ikindija { get; set; } = new NamazModel() { Namaz = NamazEnum.Ikindija };
    public NamazModel aksam { get; set; } = new NamazModel() { Namaz = NamazEnum.Aksam };
    public NamazModel jacija { get; set; } = new NamazModel() { Namaz = NamazEnum.Jacija };
    List<NamazModel> namazi = new List<NamazModel>();
    private IJSRuntime jsInterop;
    private CustomValidation? customValidation;
    //private readonly VakatServis _vakatServis;




    protected override void OnInitialized()
    {

        var configModel = _configServis.GetNamazModel();

        zora = configModel.Zora;
        izlazak = configModel.IzlazakSunca;
        podne = configModel.Podne;
        dzuma = configModel.Dzuma;
        ikindija = configModel.Ikindija;
        aksam = configModel.Aksam;


        namazi.Add(zora);
        namazi.Add(izlazak);
        namazi.Add(podne);
        namazi.Add(dzuma);
        namazi.Add(ikindija);
        namazi.Add(aksam);
        namazi.Add(jacija);



        base.OnInitialized();
    }

    private async Task IdiNaAncon(string targetId)
    {
        if (!string.IsNullOrEmpty(targetId))
        {
            // If the target ID has been specified, we know this is an anchor link that we need to scroll
            // to, so we call the JavaScript method to take care of this for us.
            await this.JsInterop.InvokeVoidAsync("anchorLink.scrollIntoView", targetId);
        }
    }
    private void OnModelChanged(ChangeEventArgs e, NamazEnum namaz ,string propetyName)
    {
        /*
        var namazModel = namazi.Where(d => d.Namaz == namaz).FirstOrDefault();



        Type myClassType = typeof(NamazModel); // get the type of the class

        // use Reflection to get the PropertyInfo object for the property
        PropertyInfo propertyInfo = myClassType.GetProperty(propetyName);

        // use the PropertyInfo.PropertyType property to get the type of the property
        Type propertyType = propertyInfo.PropertyType;

        try
        {
            object result = Convert.ChangeType(e.Value, Nullable.GetUnderlyingType(propertyType) ?? propertyType);
            namazModel.GetType().GetProperty(propetyName).SetValue(namazModel, e.Value);
            _configServis.SaveNamazConfigSingle(namazModel);

        }
        catch (Exception ec)
        {

        }



        //_configServis.SaveNamazConfigSingle(namazModel);
        //_configServis.SaveNamazConfigProperty<NamazModel>(namaz, propetyName, ado);
        */
    }
    
}
   